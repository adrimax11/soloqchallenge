---
import jugadores from './jugadores.json';
import axios from "axios";

let playersData = [];

const api = await import.meta.env.RIOT_API_KEY;

async function getSummonerData(summonerName) {
    const url = `https://euw1.api.riotgames.com/lol/summoner/v4/summoners/by-name/${summonerName}?api_key=${api}`;

    try {
        const response = await axios.get(url);
        return response.data;
    } catch (error) {
        console.error(error);
    }
}
async function getElo(summonerId) {
    const url = `https://euw1.api.riotgames.com/lol/league/v4/entries/by-summoner/${summonerId}?api_key=${api}`;

    try {
        const response = await axios.get(url);
        const soloQueueEntry = response.data.find((entry) => entry.queueType === 'RANKED_SOLO_5x5');
        if (soloQueueEntry) {
            const wins = soloQueueEntry.wins;
            const losses = soloQueueEntry.losses;
            const partidas = wins + losses;
            const winrate = wins / partidas * 100;
            return {
                elo: `${soloQueueEntry.tier} ${soloQueueEntry.rank} (${soloQueueEntry.leaguePoints} LP)`,
                partidas: partidas,
                wins: wins,
                losses: losses,
                winrate: winrate,
            };
        } else {
            return {
                elo: 'Unranked',
                partidas: 0,
                wins: 0,
                losses: 0,
                winrate: 0,
            };
        }
    } catch (error) {
        console.error(error);
    }
}

for (let jugador of jugadores) {
    const data = await getSummonerData(jugador.cuenta);
    const eloData = await getElo(data.id);
    playersData.push({
        ...jugador,
        profileIconId: data.profileIconId,
        id: data.id,
        ...eloData,
    });
}

const roleToImage = {
              'jungla': 'jgl',
                'top': 'top',
                'mid': 'mid',
                'adc': 'adc',
                'support': 'sup',
              // Agrega aquí las otras asociaciones de roles a imágenes
            };
---


<body class="antialiased font-sans ">
    
    <table class="min-w-full divide-y divide-gray-200 shadow-sm mt-4 bg-zinc-900 text-white">
        <thead class="bg-zinc-900">
            <tr>
                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase">#</th>
                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase">Streamer</th>
                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase">Rol</th>
                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase"><img src="/rss icons/twitter.png" alt="Twitter" width="15" height="15" /></th>
                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase"><img src="/rss icons/twitch.png" alt="Twitch" width="15" height="15" /></th>
                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase">Cuenta</th>
                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase">Elo</th>
                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase">Partidas</th>
                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase">Ganadas</th>
                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase">Perdidas</th>
                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase">Winrate</th>
            </tr>
        </thead>
        
        <tbody class="bg-zinc-900 divide-y divide-gray-200">
            {playersData.map((jugador) => (
                <tr class="space-x-4 border-t border-white">
                    <td class="px-6 py-4 whitespace-nowrap">{jugador.posicion}</td>
                    <td class="px-6 py-4 whitespace-nowrap">{jugador.nombre}</td>
                    <td class="px-6 py-4 whitespace-nowrap text-center">
                        <img src={`/rol icons/${roleToImage[jugador.rol]}.png`} alt={jugador.rol} class="inline-block" />
                    </td>
                    <td class="px-6 py-4 whitespace-nowrap text-center">
                        <a href={`https://twitter.com/${jugador.twitter}`}>
                            <img src="/rss icons/twitter.png" alt="Twitter" width="15" height="15" />
                        </a>
                    </td>
                
                    <td class="px-6 py-4 whitespace-nowrap text-center">
                        <a href={`https://twitch.tv/${jugador.twitch}`}>
                            <img src="/rss icons/twitch.png" alt="Twitch" width="15" height="15" />
                        </a>
                    </td>                    
                    <td class="px-6 py-4 whitespace-nowrap flex items-center">
                        <img 
                            width="30" 
                            height="30" 
                            src={`https://ddragon.leagueoflegends.com/cdn/14.2.1/img/profileicon/${jugador.profileIconId}.png`} 
                            class="rounded-full mr-2" 
                        />
                        {jugador.cuenta}
                    </td>
                    <td class="px-6 py-4 whitespace-nowrap">{jugador.elo}</td>
                    <td class="px-6 py-4 whitespace-nowrap">{jugador.partidas}</td>
                    <td class="px-6 py-4 whitespace-nowrap text-lime-800">{jugador.wins}</td>
                    <td class="px-6 py-4 whitespace-nowrap text-red-800">{jugador.losses}</td>
                    <td class="px-6 py-4 whitespace-nowrap">{jugador.winrate.toFixed(2)}%</td>
                </tr>
            ))}
        </tbody>
    </table>
</body>
